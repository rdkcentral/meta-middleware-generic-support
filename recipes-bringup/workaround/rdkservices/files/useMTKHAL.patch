diff --git a/AVOutput/AVOutputTV.cpp b/AVOutput/AVOutputTV.cpp
index 918b830..381ed78 100644
--- a/AVOutput/AVOutputTV.cpp
+++ b/AVOutput/AVOutputTV.cpp
@@ -780,48 +780,48 @@ namespace Plugin {
 
     uint32_t AVOutputTV::getBacklightCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this]( tvContextCaps_t** context_caps, int* max_backlight) {
-            return this->GetBacklightCaps(max_backlight, context_caps);
+            return GetBacklightCaps(max_backlight, context_caps);
         }, "Backlight", parameters, response);
     }
 
     uint32_t AVOutputTV::getBrightnessCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this]( tvContextCaps_t** context_caps, int* max_brightness) {
-            return this->GetBrightnessCaps(max_brightness, context_caps);
+            return GetBrightnessCaps(max_brightness, context_caps);
         },
         "Brightness", parameters, response);
     }
 
     uint32_t AVOutputTV::getContrastCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_contrast) {
-            return this->GetContrastCaps(max_contrast, context_caps);
+            return GetContrastCaps(max_contrast, context_caps);
         },
         "Contrast", parameters, response);
     }
 
     uint32_t AVOutputTV::getSharpnessCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_sharpness) {
-            return this->GetSharpnessCaps(max_sharpness, context_caps);
+            return GetSharpnessCaps(max_sharpness, context_caps);
         },
         "Sharpness", parameters, response);
     }
 
     uint32_t AVOutputTV::getSaturationCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_saturation) {
-            return this->GetSaturationCaps(max_saturation, context_caps);
+            return GetSaturationCaps(max_saturation, context_caps);
         },
         "Saturation", parameters, response);
     }
 
     uint32_t AVOutputTV::getHueCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this]( tvContextCaps_t** context_caps, int* max_hue) {
-            return this->GetHueCaps(max_hue, context_caps);
+            return GetHueCaps(max_hue, context_caps);
         },
         "Hue", parameters, response);
     }
 
     uint32_t AVOutputTV::getPrecisionDetailCaps(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_precision) {
-            return this->GetPrecisionDetailCaps(max_precision, context_caps);
+            return GetPrecisionDetailCaps(max_precision, context_caps);
         },
         "PrecisionDetail", parameters, response);
     }
@@ -849,7 +849,7 @@ namespace Plugin {
 
     uint32_t AVOutputTV::getAISuperResolutionCaps(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_val) {
-            return this->GetAISuperResolutionCaps(max_val, context_caps);
+            return GetAISuperResolutionCaps(max_val, context_caps);
         },
         "AISuperResolution", parameters, response);
     }
@@ -912,14 +912,14 @@ namespace Plugin {
 
     uint32_t AVOutputTV::getMEMCCaps(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_val) {
-            return this->GetMEMCCaps(max_val, context_caps);
+            return GetMEMCCaps(max_val, context_caps);
         },
         "MEMC", parameters, response);
     }
 
     uint32_t AVOutputTV::getLowLatencyStateCapsV2(const JsonObject& parameters, JsonObject& response) {
         return getPQCapabilityWithContext([this](tvContextCaps_t** context_caps, int* max_latency) {
-            return this->GetLowLatencyStateCaps(max_latency, context_caps);
+            return GetLowLatencyStateCaps(max_latency, context_caps);
         },
         "LowLatencyState", parameters, response);
     }
@@ -1467,10 +1467,10 @@ namespace Plugin {
     #if HAL_NOT_READY
         bool success = false;
     #else
-        bool success = resetPQParamToDefault(parameters, "LocalContrastEnhancement",
-                                            PQ_PARAM_LOCAL_CONTRAST_ENHANCEMENT, SetLocalContrastEnhancement);
+        /*bool success = resetPQParamToDefault(parameters, "LocalContrastEnhancement",
+                                            PQ_PARAM_LOCAL_CONTRAST_ENHANCEMENT, SetLocalContrastEnhancement);*/
     #endif
-        returnResponse(success);
+        returnResponse(true);
     }
 
     uint32_t AVOutputTV::resetMPEGNoiseReduction(const JsonObject& parameters, JsonObject& response)
@@ -1478,10 +1478,10 @@ namespace Plugin {
     #if HAL_NOT_READY
         bool success = false;
     #else
-        bool success = resetPQParamToDefault(parameters, "MPEGNoiseReduction",
-                                            PQ_PARAM_MPEG_NOISE_REDUCTION, SetMPEGNoiseReduction);
+        /*bool success = resetPQParamToDefault(parameters, "MPEGNoiseReduction",
+                                            PQ_PARAM_MPEG_NOISE_REDUCTION, SetMPEGNoiseReduction);*/
     #endif
-        returnResponse(success);
+        returnResponse(true);
     }
 
     uint32_t AVOutputTV::resetDigitalNoiseReduction(const JsonObject& parameters, JsonObject& response)
@@ -1489,10 +1489,10 @@ namespace Plugin {
     #if HAL_NOT_READY
         bool success = false;
     #else
-        bool success = resetPQParamToDefault(parameters, "DigitalNoiseReduction",
-                                            PQ_PARAM_DIGITAL_NOISE_REDUCTION, SetDigitalNoiseReduction);
+       /* bool success = resetPQParamToDefault(parameters, "DigitalNoiseReduction",
+                                            PQ_PARAM_DIGITAL_NOISE_REDUCTION, SetDigitalNoiseReduction);*/
     #endif
-        returnResponse(success);
+        returnResponse(true);
     }
 
     uint32_t AVOutputTV::resetMEMC(const JsonObject& parameters, JsonObject& response)
@@ -1706,7 +1706,7 @@ namespace Plugin {
 
     uint32_t AVOutputTV::setLocalContrastEnhancement(const JsonObject& parameters, JsonObject& response)
     {
-        return setContextPQParam(
+       /*return setContextPQParam(
             parameters, response,
             "localContrastEnhancement", "LocalContrastEnhancement",
             m_maxLocalContrastEnhancement,
@@ -1714,12 +1714,13 @@ namespace Plugin {
             [](tvVideoSrcType_t src, tvPQModeIndex_t mode, tvVideoFormatType_t fmt, int val) {
                 return SetLocalContrastEnhancement(src, mode, fmt, val);
             }
-        );
+        );*/
+        returnResponse(true);
     }
 
     uint32_t AVOutputTV::setMPEGNoiseReduction(const JsonObject& parameters, JsonObject& response)
     {
-        return setContextPQParam(
+        /*return setContextPQParam(
             parameters, response,
             "mpegNoiseReduction", "MPEGNoiseReduction",
             m_maxMPEGNoiseReduction,
@@ -1727,12 +1728,13 @@ namespace Plugin {
             [](tvVideoSrcType_t src, tvPQModeIndex_t mode, tvVideoFormatType_t fmt, int val) {
                 return SetMPEGNoiseReduction(src, mode, fmt, val);
             }
-        );
+        );*/
+        returnResponse(true);
     }
 
     uint32_t AVOutputTV::setDigitalNoiseReduction(const JsonObject& parameters, JsonObject& response)
     {
-        return setContextPQParam(
+        /*return setContextPQParam(
             parameters, response,
             "digitalNoiseReduction", "DigitalNoiseReduction",
             m_maxDigitalNoiseReduction,
@@ -1740,7 +1742,8 @@ namespace Plugin {
             [](tvVideoSrcType_t src, tvPQModeIndex_t mode, tvVideoFormatType_t fmt, int val) {
                 return SetDigitalNoiseReduction(src, mode, fmt, val);
             }
-        );
+        );*/
+        returnResponse(true);
     }
 
     uint32_t AVOutputTV::getBacklight(const JsonObject& parameters, JsonObject& response)
diff --git a/AVOutput/AVOutputTV.h b/AVOutput/AVOutputTV.h
index 1b66dbe..2bf2663 100644
--- a/AVOutput/AVOutputTV.h
+++ b/AVOutput/AVOutputTV.h
@@ -425,34 +425,34 @@ class AVOutputTV : public AVOutputBase {
 			auto it = reverseMap.find(key);
 			return (it != reverseMap.end()) ? it->second : defaultVal;
 		}
-#define HAL_NOT_READY 1
-#if HAL_NOT_READY
+//#define HAL_NOT_READY 1
+//#if HAL_NOT_READY
 		tvError_t ReadJsonFile(JsonObject& root);
 		tvError_t ExtractContextCaps(const JsonObject& data, tvContextCaps_t** context_caps);
 		tvError_t ExtractRangeInfo(const JsonObject& data, int* max_value);
 		std::vector<tvConfigContext_t> ParseContextCaps(const JsonObject& context);
 		tvContextCaps_t* AllocateContextCaps(const std::vector<tvConfigContext_t>& contexts);
 		tvError_t GetCaps(const std::string& key, int* max_value, tvContextCaps_t** context_caps);
-		tvError_t GetBacklightCaps(int *max_backlight, tvContextCaps_t **context_caps);
-		tvError_t GetBrightnessCaps(int *max_brightness, tvContextCaps_t **context_caps);
-		tvError_t GetContrastCaps(int* max_contrast, tvContextCaps_t** context_caps);
-		tvError_t GetSharpnessCaps(int *max_sharpness, tvContextCaps_t **context_caps);
-        tvError_t GetSaturationCaps(int* max_saturation, tvContextCaps_t** context_caps);
-		tvError_t GetHueCaps(int* max_hue, tvContextCaps_t** context_caps);
-		tvError_t GetPrecisionDetailCaps(int* max_precision, tvContextCaps_t** context_caps);
-		tvError_t GetLowLatencyStateCaps(int* max_latency, tvContextCaps_t ** context_caps);
-		tvError_t GetColorTemperatureCaps(tvColorTemp_t** color_temp, size_t* num_color_temp, tvContextCaps_t** context_caps);
-		tvError_t GetSdrGammaCaps(tvSdrGamma_t** sdr_gamma, size_t* num_sdr_gamma, tvContextCaps_t** context_caps);
-		tvError_t GetTVDimmingModeCaps(tvDimmingMode_t** dimming_mode, size_t* num_dimming_mode, tvContextCaps_t** context_caps);
-		tvError_t GetAspectRatioCaps(tvDisplayMode_t** aspect_ratio, size_t* num_aspect_ratio, tvContextCaps_t** context_caps);
+		//tvError_t GetBacklightCaps(int *max_backlight, tvContextCaps_t **context_caps);
+		//tvError_t GetBrightnessCaps(int *max_brightness, tvContextCaps_t **context_caps);
+		//tvError_t GetContrastCaps(int* max_contrast, tvContextCaps_t** context_caps);
+		//tvError_t GetSharpnessCaps(int *max_sharpness, tvContextCaps_t **context_caps);
+        //tvError_t GetSaturationCaps(int* max_saturation, tvContextCaps_t** context_caps);
+		//tvError_t GetHueCaps(int* max_hue, tvContextCaps_t** context_caps);
+		//tvError_t GetPrecisionDetailCaps(int* max_precision, tvContextCaps_t** context_caps);
+		//tvError_t GetLowLatencyStateCaps(int* max_latency, tvContextCaps_t ** context_caps);
+		//tvError_t GetColorTemperatureCaps(tvColorTemp_t** color_temp, size_t* num_color_temp, tvContextCaps_t** context_caps);
+		//tvError_t GetSdrGammaCaps(tvSdrGamma_t** sdr_gamma, size_t* num_sdr_gamma, tvContextCaps_t** context_caps);
+		//tvError_t GetTVDimmingModeCaps(tvDimmingMode_t** dimming_mode, size_t* num_dimming_mode, tvContextCaps_t** context_caps);
+		//tvError_t GetAspectRatioCaps(tvDisplayMode_t** aspect_ratio, size_t* num_aspect_ratio, tvContextCaps_t** context_caps);
 		tvError_t GetDVCalibrationCaps(tvDVCalibrationSettings_t **min_values, tvDVCalibrationSettings_t **max_values, tvContextCaps_t **context_caps);
-		tvError_t GetTVPictureModeCaps(tvPQModeIndex_t** mode, size_t* num_pic_modes, tvContextCaps_t** context_caps);
+		//tvError_t GetTVPictureModeCaps(tvPQModeIndex_t** mode, size_t* num_pic_modes, tvContextCaps_t** context_caps);
 		tvError_t GetBacklightModeCaps(tvBacklightMode_t** backlight_mode, size_t* num_backlight_mode, tvContextCaps_t** context_caps);
 		tvError_t GetLocalContrastEnhancementCaps(int* maxLocalContrastEnhancement, tvContextCaps_t** context_caps);
 		tvError_t GetMPEGNoiseReductionCaps(int* maxMPEGNoiseReduction, tvContextCaps_t** context_caps);
 		tvError_t GetDigitalNoiseReductionCaps(int* maxDigitalNoiseReduction, tvContextCaps_t** context_caps);
-		tvError_t GetAISuperResolutionCaps(int* maxAISuperResolution, tvContextCaps_t** context_caps);
-		tvError_t GetMEMCCaps(int* maxMEMC, tvContextCaps_t** context_caps);
+		//tvError_t GetAISuperResolutionCaps(int* maxAISuperResolution, tvContextCaps_t** context_caps);
+		//tvError_t GetMEMCCaps(int* maxMEMC, tvContextCaps_t** context_caps);
 		tvError_t GetMultiPointWBCaps(int* num_hal_matrix_points,
 			int* rgb_min,
 			int* rgb_max,
@@ -473,7 +473,7 @@ class AVOutputTV : public AVOutputBase {
 			tvWBControl_t **control, size_t* num_color,
 			size_t* num_control, tvContextCaps_t ** context_caps);
 
-#endif
+#define HAL_NOT_READY 0
 		uint32_t getPQCapabilityWithContext(
 			const std::function<tvError_t(tvContextCaps_t**, int*)>& getCapsFunc,
 			const char* key,
diff --git a/AVOutput/AVOutputTVHelper.cpp b/AVOutput/AVOutputTVHelper.cpp
index 70d4b26..17623f8 100644
--- a/AVOutput/AVOutputTVHelper.cpp
+++ b/AVOutput/AVOutputTVHelper.cpp
@@ -900,7 +900,7 @@ namespace Plugin {
         return ret;
     }
 
-    tvContentFormatType_t AVOutputTV::convertFormatStringToTVContentFormat(const char *format)
+    /*tvContentFormatType_t AVOutputTV::convertFormatStringToTVContentFormat(const char *format)
     {
         tvContentFormatType_t ret = tvContentFormatType_SDR;
 
@@ -918,7 +918,7 @@ namespace Plugin {
 	}
 
         return ret;
-    }
+    }*/
 
     tvError_t AVOutputTV::updateAVoutputTVParamToHALV2(std::string forParam, paramIndex_t indexInfo, int value, bool setNotDelete)
     {
@@ -3108,30 +3108,30 @@ namespace Plugin {
                 case PQ_PARAM_LOCAL_CONTRAST_ENHANCEMENT:
             #if HAL_NOT_READY
             #else
-                    ret |= SetLocalContrastEnhancement((tvVideoSrcType_t)paramIndex.sourceIndex,
+                    /*ret |= SetLocalContrastEnhancement((tvVideoSrcType_t)paramIndex.sourceIndex,
                                                     (tvPQModeIndex_t)paramIndex.pqmodeIndex,
                                                     (tvVideoFormatType_t)paramIndex.formatIndex,
-                                                    level);
+                                                    level);*/
             #endif
                     break;
 
                 case PQ_PARAM_MPEG_NOISE_REDUCTION:
             #if HAL_NOT_READY
             #else
-                    ret |= SetMPEGNoiseReduction((tvVideoSrcType_t)paramIndex.sourceIndex,
+                    /*ret |= SetMPEGNoiseReduction((tvVideoSrcType_t)paramIndex.sourceIndex,
                                                 (tvPQModeIndex_t)paramIndex.pqmodeIndex,
                                                 (tvVideoFormatType_t)paramIndex.formatIndex,
-                                                level);
+                                                level);*/
             #endif
                     break;
 
                 case PQ_PARAM_DIGITAL_NOISE_REDUCTION:
             #if HAL_NOT_READY
             #else
-                    ret |= SetDigitalNoiseReduction((tvVideoSrcType_t)paramIndex.sourceIndex,
+                   /*ret |= SetDigitalNoiseReduction((tvVideoSrcType_t)paramIndex.sourceIndex,
                                                     (tvPQModeIndex_t)paramIndex.pqmodeIndex,
                                                     (tvVideoFormatType_t)paramIndex.formatIndex,
-                                                    level);
+                                                    level);*/
             #endif
                     break;
 
@@ -3199,8 +3199,8 @@ namespace Plugin {
         return ret;
     }
 
-#if HAL_NOT_READY
-#define CAPABLITY_FILE_NAMEV2    "/opt/panel/pq_capabilities.json"
+//#if HAL_NOT_READY
+#define CAPABLITY_FILE_NAMEV2    "/opt/pq_capabilities.json"
 
 tvError_t AVOutputTV::ReadJsonFile(JsonObject& root) {
     std::ifstream file(CAPABLITY_FILE_NAMEV2);
@@ -3370,7 +3370,7 @@ tvError_t AVOutputTV::GetCaps(const std::string& key, int* max_value, tvContextC
 
     return tvERROR_NONE;
 }
-
+#if HAL_NOT_READY
 tvError_t AVOutputTV::GetBacklightCaps(int* max_backlight, tvContextCaps_t** context_caps) {
     return GetCaps("Backlight", max_backlight, context_caps);
 }
@@ -3403,7 +3403,7 @@ tvError_t AVOutputTV::GetLowLatencyStateCaps(int* max_latency, tvContextCaps_t *
 tvError_t AVOutputTV::GetPrecisionDetailCaps(int * maxPrecision, tvContextCaps_t ** context_caps) {
     return GetCaps("PrecisionDetail", maxPrecision, context_caps);
 }
-
+#endif
 // LocalContrastEnhancement
 tvError_t AVOutputTV::GetLocalContrastEnhancementCaps(int * maxLocalContrastEnhancement, tvContextCaps_t ** context_caps) {
     return GetCaps("LocalContrastEnhancement", maxLocalContrastEnhancement, context_caps);
@@ -3418,7 +3418,7 @@ tvError_t AVOutputTV::GetMPEGNoiseReductionCaps(int * maxMPEGNoiseReduction, tvC
 tvError_t AVOutputTV::GetDigitalNoiseReductionCaps(int * maxDigitalNoiseReduction, tvContextCaps_t ** context_caps) {
     return GetCaps("DigitalNoiseReduction", maxDigitalNoiseReduction, context_caps);
 }
-
+#if HAL_NOT_READY
 // AISuperResolution
 tvError_t AVOutputTV::GetAISuperResolutionCaps(int * maxAISuperResolution, tvContextCaps_t ** context_caps) {
     return GetCaps("AISuperResolution", maxAISuperResolution, context_caps);
@@ -3428,7 +3428,7 @@ tvError_t AVOutputTV::GetAISuperResolutionCaps(int * maxAISuperResolution, tvCon
 tvError_t AVOutputTV::GetMEMCCaps(int * maxMEMC, tvContextCaps_t ** context_caps) {
     return GetCaps("MEMC", maxMEMC, context_caps);
 }
-
+#endif
 tvError_t AVOutputTV::GetMultiPointWBCaps(int* num_hal_matrix_points,
     int* rgb_min,
     int* rgb_max,
@@ -3484,7 +3484,7 @@ tvError_t AVOutputTV::GetMultiPointWBCaps(int* num_hal_matrix_points,
     return tvERROR_NONE;
 }
 
-
+#if HAL_NOT_READY
 tvError_t AVOutputTV::GetColorTemperatureCaps(tvColorTemp_t** color_temp, size_t* num_color_temp, tvContextCaps_t** context_caps) {
     LOGINFO("Entry\n");
     JsonObject root;
@@ -3726,6 +3726,7 @@ tvError_t AVOutputTV::GetTVPictureModeCaps(tvPQModeIndex_t** mode, size_t* num_p
 
     return tvERROR_NONE;
 }
+#endif
 tvError_t AVOutputTV::GetBacklightModeCaps(tvBacklightMode_t** backlight_mode, size_t* num_backlight_mode, tvContextCaps_t** context_caps)
 {
     LOGINFO("Entry\n");
@@ -3991,7 +3992,7 @@ tvError_t AVOutputTV::GetCustom2PointWhiteBalanceCaps(int* min_gain, int* min_of
     return tvERROR_NONE;
 }
 
-#endif
+//#endif
 
 	int AVOutputTV::ReadCapablitiesFromConf(std::string param, capDetails_t& info)
     {
